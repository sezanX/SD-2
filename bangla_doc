---

## বাংলাদেশ ট্যাক্স ক্যালকুলেটর: গণনা যুক্তি ও অ্যালগরিদম ডকুমেন্টেশন

**সংস্করণ:** ১.০
**তারিখ:** এপ্রিল ২৩, ২০২৪

### ১. উদ্দেশ্য

এই ডকুমেন্টটির উদ্দেশ্য হলো `MainActivity.kt` ফাইলের মধ্যে বাস্তবায়িত বাংলাদেশের ব্যক্তিগত আয়কর গণনার অ্যালগরিদম এবং গাণিতিক ধাপগুলো বিস্তারিতভাবে বর্ণনা করা। এটি ব্যবহারকারীর ইনপুট গ্রহণ, কর অব্যাহতি গণনা (উদাহরণসহ), ট্যাক্স স্ল্যাব গণনা, বিনিয়োগ রেয়াত গণনা, ন্যূনতম কর প্রয়োগ এবং মুদ্রা ফরম্যাটিং সংক্রান্ত যুক্তি ব্যাখ্যা করে, সেইসাথে PDF রিপোর্ট তৈরির যুক্তিও অন্তর্ভুক্ত করে।

**অস্বীকৃতি (Disclaimer):** এখানে বাস্তবায়িত নির্দিষ্ট কর বিধি, হার, সীমা এবং অব্যাহতির সূত্রগুলো ডেভলপমেন্টের সময় প্রাপ্ত তথ্যের (যেমন, অর্থবছর ২০২৪-২৫ এর করমুক্ত আয়ের সীমার স্ক্রিনশট) এবং সাধারণ ধারণার উপর ভিত্তি করে তৈরি। **এগুলো উদাহরণ/প্লেসহোল্ডার মান এবং যুক্তি।** সঠিক গণনার জন্য, নির্দিষ্ট মূল্যায়ন বছরের (Assessment Year) জন্য **জাতীয় রাজস্ব বোর্ড (এনবিআর)-এর সর্বশেষ অফিসিয়াল সার্কুলার অনুযায়ী এগুলি অবশ্যই যাচাই এবং আপডেট করতে হবে।** এই অ্যাপ্লিকেশনটি শুধুমাত্র একটি আনুমানিক হিসাব করার টুল হিসেবে ব্যবহার করা উচিত।

---

### ২. মূল গণনা ডেটা প্রবাহ (Core Calculation Data Flow)

ট্যাক্স গণনা প্রক্রিয়াটি সাধারণত নিম্নলিখিত ধাপগুলো অনুসরণ করে:

1.  **ইনপুট সংগ্রহ:** ব্যবহারকারীর ইনপুট ফিল্ড থেকে বার্ষিক মূল বেতন, বোনাস, অন্যান্য করযোগ্য আয় এবং যোগ্য বিনিয়োগের পরিমাণ গ্রহণ করা। ইনপুট ভ্যালিডেট করা।
2.  **করদাতার ক্যাটাগরি সনাক্তকরণ:** Spinner থেকে নির্বাচিত করদাতার ক্যাটাগরি নির্ধারণ করা, যা সঠিক করমুক্ত আয়ের সীমা প্রয়োগ করতে ব্যবহৃত হবে।
3.  **অব্যাহতি গণনা (প্লেসহোল্ডার):** পূর্বনির্ধারিত (উদাহরণ) নিয়মাবলী প্রয়োগ করে বাড়ি ভাড়া, চিকিৎসা ভাতা ইত্যাদির জন্য কর্তনযোগ্য পরিমাণ গণনা করা (মূলত বেসিক স্যালারির উপর ভিত্তি করে)।
4.  **মোট করযোগ্য আয় গণনা (Gross Taxable Income):** মোট আয় (বেসিক + বোনাস + অন্যান্য) থেকে গণনা করা মোট অব্যাহতি বাদ দিয়ে করের স্ল্যাবের আওতাভুক্ত আয়ের পরিমাণ নির্ণয় করা।
5.  **মোট কর গণনা (`calculateTaxSlabs`):** প্রযোজ্য ট্যাক্স স্ল্যাব এবং হারের উপর ভিত্তি করে বিনিয়োগ রেয়াত বিবেচনা করার *আগে* মোট প্রদেয় কর গণনা করা। এটি ধাপ ২-এ নির্ধারিত করমুক্ত সীমা ব্যবহার করে।
6.  **বিনিয়োগ রেয়াত গণনা (`calculateRebate`):** মোট করযোগ্য আয়, ব্যবহারকারীর দেওয়া বিনিয়োগের পরিমাণ এবং যোগ্য বিনিয়োগের সীমা ও রেয়াতের হার সম্পর্কিত এনবিআর নিয়ম (উদাহরণ) অনুযায়ী যোগ্য কর রেয়াত গণনা করা।
7.  **নীট কর গণনা (ন্যূনতম করের আগে):** গণনা করা বিনিয়োগ রেয়াতকে ধাপ ৫-এর মোট গণনা করা কর থেকে বিয়োগ করা।
8.  **ন্যূনতম কর প্রয়োগ:** ধাপ ৭-এর ফলাফলকে প্রযোজ্য ন্যূনতম করের (অবস্থান/স্থিতির উপর ভিত্তি করে - *বর্তমানে প্লেসহোল্ডার*) সাথে তুলনা করা। নীট প্রদেয় কর হবে এই দুটির মধ্যে যেটি বেশি (তবে শুধুমাত্র যদি করযোগ্য আয় করমুক্ত সীমা অতিক্রম করে)।
9.  **ফলাফল প্রদর্শন:** গণনা করা মানগুলোকে BDT মুদ্রায় ফর্ম্যাট করে "Tax Summary" UI কার্ডে প্রদর্শন করা।
10. **ফলাফল সংরক্ষণ:** চূড়ান্ত গণনা করা মানগুলো ক্লাসের মেম্বার ভেরিয়েবলে সংরক্ষণ করা (PDF তৈরির জন্য)।

---

### ৩. বিস্তারিত অ্যালগরিদম বাস্তবায়ন (`MainActivity.kt`)

#### ৩.১. ইনপুট হ্যান্ডলিং (`getInputAsDouble` ফাংশন)

*   **অ্যালগরিদম:**
    1.  প্রদত্ত `TextInputEditText` থেকে টেক্সট পড়ুন।
    2.  শুরু এবং শেষের অতিরিক্ত স্পেস বাদ দিন (`trim`)।
    3.  সম্পর্কিত `TextInputLayout`-এ আগের কোনো এরর মেসেজ থাকলে তা ক্লিয়ার করুন।
    4.  ব্যবহারকারী কমা (`,`) ব্যবহার করলে (যেমন "1,000,000"), সেগুলোকে খালি স্ট্রিং দিয়ে প্রতিস্থাপন করুন।
    5.  প্রাপ্ত স্ট্রিংটি খালি কিনা তা পরীক্ষা করুন।
        *   খালি হলে এবং `isRequired` যদি `true` হয়, তাহলে `TextInputLayout`-এ এরর সেট করুন এবং `null` রিটার্ন করুন।
        *   খালি হলে এবং `isRequired` যদি `false` হয়, তাহলে `0.0` রিটার্ন করুন।
    6.  `toDouble()` ব্যবহার করে স্ট্রিংটিকে `Double`-এ পার্স করার চেষ্টা করুন।
    7.  পার্স সফল হলে, `Double` মানটি রিটার্ন করুন।
    8.  পার্স করার সময় `NumberFormatException` ঘটলে, `TextInputLayout`-এ এরর সেট করুন এবং `null` রিটার্ন করুন।
*   **বাস্তবায়ন নোট:** একটি nullable `Double` (`Double?`) রিটার্ন করে যাতে সফলতা (Double মান) বা ব্যর্থতা (null) স্পষ্টভাবে বোঝা যায়। পরবর্তীতে এই ইনপুট থেকে প্রাপ্ত মোট আয়ের উপর `coerceAtLeast(0.0)` ব্যবহার করা হয়।

#### ৩.২. করমুক্ত সীমা নির্ধারণ (`getTaxFreeLimit` ফাংশন)

*   **অ্যালগরিদম:**
    1.  `Spinner`-এর অ্যাডাপ্টার ইনিশিয়ালাইজড হয়েছে কিনা এবং কোনো আইটেম সিলেক্ট করা আছে কিনা তা পরীক্ষা করুন। যদি না থাকে, ডিফল্ট `TAX_FREE_LIMIT_GENERAL` রিটার্ন করুন।
    2.  `spinnerTaxpayerCategory` থেকে `selectedItemPosition` নিন।
    3.  `selectedItemPosition`-এর উপর ভিত্তি করে একটি `when` স্টেটমেন্ট ব্যবহার করুন:
        *   পজিশনটিকে সংশ্লিষ্ট ক্যাটাগরির সাথে মেলান (ধরে নেওয়া হচ্ছে `string-array`-এর ক্রম এবং লজিকের ক্রম একই: 0=General, 1=Female, 2=Senior ইত্যাদি)।
        *   উপযুক্ত পূর্বনির্ধারিত ধ্রুবক (`TAX_FREE_LIMIT_GENERAL`, `TAX_FREE_LIMIT_FEMALE_SENIOR` ইত্যাদি) রিটার্ন করুন।
*   **বাস্তবায়ন নোট:** স্ট্রিং পরিবর্তনের ঝুঁকি এড়াতে আইটেমের পজিশন অনুযায়ী তুলনা করা হয়েছে। ধ্রুবকগুলোতে নির্দিষ্ট করমুক্ত আয়ের মান দেওয়া আছে (AY 2024-25 উদাহরণ অনুযায়ী)। **এনবিআর-এর অফিসিয়াল ডেটা অনুযায়ী এগুলি যাচাই এবং সম্ভাব্য আপডেট প্রয়োজন।**

#### ৩.৩. অব্যাহতি গণনা (`calculateAndDisplayTax`-এর ভিতরে - প্লেসহোল্ডার)

*   **অ্যালগরিদম:**
    1.  **বাড়ি ভাড়া:** `বেসিক স্যালারি * ০.৫` গণনা করুন। এই মান এবং বার্ষিক সীমা (যেমন: ৩,০০,০০০)-এর মধ্যে যেটি **কম**, সেটি নিন।
    2.  **চিকিৎসা:** `বেসিক স্যালারি * ০.১` গণনা করুন। এই মান এবং বার্ষিক সীমা (যেমন: ১,২০,০০০)-এর মধ্যে যেটি **কম**, সেটি নিন।
    3.  **যাতায়াত:** একটি নির্দিষ্ট বার্ষিক পরিমাণ ব্যবহার করুন (যেমন: ৩০,০০০)।
    4.  গণনা করা এই অব্যাহতিগুলোর যোগফল নির্ণয় করুন।
*   **বাস্তবায়ন নোট:** এটি অত্যন্ত সরলীকৃত। **প্রকৃত এনবিআর নিয়ম আরও জটিল** এবং প্রকৃত প্রদত্ত ভাড়া, চিকিৎসা ব্যয়, নিয়োগকর্তা কর্তৃক সুবিধা প্রদান ইত্যাদি বিষয়ের উপর নির্ভর করতে পারে। নির্ভুলতার জন্য এই অংশটির উল্লেখযোগ্য পরিমার্জন প্রয়োজন। বর্তমানে এটি ধরে নিচ্ছে যে অব্যাহতিগুলো সরাসরি মোট আয়ের উপর প্রযোজ্য।

#### ৩.৪. মোট করযোগ্য আয় গণনা (`calculateAndDisplayTax`-এর ভিতরে)

*   **অ্যালগরিদম:**
    1.  `basicSalary + bonus + otherIncome` যোগ করে `totalIncomeBeforeExemptions` বের করুন।
    2.  `totalIncomeBeforeExemptions` থেকে গণনা করা (প্লেসহোল্ডার) মোট অব্যাহতি বিয়োগ করুন।
    3.  `coerceAtLeast(0.0)` ব্যবহার করে নিশ্চিত করুন ফলাফল ঋণাত্মক নয়।
*   **বাস্তবায়ন নোট:** এর নির্ভুলতা অব্যাহতি গণনার সঠিকতার উপর ব্যাপকভাবে নির্ভরশীল।

#### ৩.৫. ট্যাক্স স্ল্যাব গণনা (`calculateTaxSlabs` ফাংশন)

*   **অ্যালগরিদম:**
    1.  প্রযোজ্য সীমা (`taxFreeLimit`) পেতে `getTaxFreeLimit()` কল করুন।
    2.  যদি `income <= taxFreeLimit` হয়, `0.0` রিটার্ন করুন।
    3.  `tax = 0.0` ইনিশিয়ালাইজ করুন।
    4.  `remainingIncome = income - taxFreeLimit` গণনা করুন।
    5.  **স্ল্যাব ১-এর জন্য (যেমন, পরবর্তী ১ লক্ষ @ ৫%):**
        *   `taxableInSlab = remainingIncome.coerceAtMost(SLAB_AMOUNT_1)`
        *   যদি `taxableInSlab > 0`, `tax += taxableInSlab * SLAB_RATE_1` যোগ করুন।
        *   `remainingIncome -= taxableInSlab` বিয়োগ করুন।
        *   যদি `remainingIncome <= 0`, `tax` রিটার্ন করুন।
    6.  **স্ল্যাব ২-এর জন্য (যেমন, পরবর্তী ৪ লক্ষ @ ১০%):**
        *   `taxableInSlab = remainingIncome.coerceAtMost(SLAB_AMOUNT_2)`
        *   যদি `taxableInSlab > 0`, `tax += taxableInSlab * SLAB_RATE_2` যোগ করুন।
        *   `remainingIncome -= taxableInSlab` বিয়োগ করুন।
        *   যদি `remainingIncome <= 0`, `tax` রিটার্ন করুন।
    7.  পরবর্তী স্ল্যাবগুলোর (`SLAB_AMOUNT_3`/`SLAB_RATE_3`, `SLAB_AMOUNT_4`/`SLAB_RATE_4`) জন্য **পুনরাবৃত্তি করুন**।
    8.  **চূড়ান্ত স্ল্যাবের জন্য (সর্বোচ্চ হার, যেমন ২৫%):**
        *   যদি `remainingIncome > 0`, `tax += remainingIncome * SLAB_RATE_5` যোগ করুন।
    9.  চূড়ান্ত `tax` রিটার্ন করুন।
*   **বাস্তবায়ন নোট:** স্ল্যাবের *পরিমাণ* (যেমন: ১ লক্ষ, ৪ লক্ষ) এবং স্ল্যাবের *হার*-এর জন্য পূর্বনির্ধারিত ধ্রুবক ব্যবহার করা হয়েছে। **সঠিক মূল্যায়ন বছরের জন্য এনবিআর সার্কুলার অনুযায়ী এই ধ্রুবকগুলি অবশ্যই যাচাই করতে হবে।**

#### ৩.৬. বিনিয়োগ রেয়াত গণনা (`calculateRebate` ফাংশন)

*   **অ্যালগরিদম:**
    1.  `getTaxFreeLimit()` কল করুন।
    2.  যদি `taxableIncome <= taxFreeLimit`, `0.0` রিটার্ন করুন (কোনো রেয়াত প্রযোজ্য নয়)।
    3.  **সর্বোচ্চ যোগ্য বিনিয়োগ ভিত্তি গণনা:**
        *   `limit1 = taxableIncome * MAX_INVESTMENT_ELIGIBLE_PERCENTAGE` (যেমন, করযোগ্য আয়ের ২০%)।
        *   `maxEligibleBase = min(limit1, MAX_INVESTMENT_ELIGIBLE_ABSOLUTE)` (যেমন, আয়ের ২০% বা ১ কোটি টাকার মধ্যে যেটি কম)।
    4.  **রেয়াতের জন্য বিবেচিত বিনিয়োগের পরিমাণ গণনা:**
        *   `investmentForRebateCalc = min(actualInvestment, maxEligibleBase)` (ব্যবহারকারীর প্রকৃত বিনিয়োগ বা সর্বোচ্চ ভিত্তির মধ্যে যেটি কম)।
    5.  **চূড়ান্ত রেয়াতের পরিমাণ গণনা:**
        *   `calculatedRebate = investmentForRebateCalc * REBATE_RATE` (যেমন, ধাপ ৪-এর পরিমাণের উপর ১৫%)।
    6.  `calculatedRebate` রিটার্ন করুন। (দ্রষ্টব্য: চূড়ান্ত রেয়াতের পরিমাণের উপর কোনো পরম সীমা (absolute cap) আছে কিনা তা NBR নিয়মে পরীক্ষা করতে হবে)।
*   **বাস্তবায়ন নোট:** শতাংশ সীমা, পরম সীমা এবং রেয়াতের হারের জন্য পূর্বনির্ধারিত ধ্রুবক ব্যবহার করা হয়েছে। **এনবিআর কর্তৃক যাচাইকরণ প্রয়োজন।**

#### ৩.৭. নীট প্রদেয় কর ও ন্যূনতম কর (`calculateAndDisplayTax`-এর ভিতরে)

*   **অ্যালগরিদম:**
    1.  প্রাথমিক নীট কর গণনা: `netTax = taxBeforeRebate - investmentRebate`।
    2.  নিশ্চিত করুন `netTax` ঋণাত্মক নয়: `netTax = netTax.coerceAtLeast(0.0)`।
    3.  `getTaxFreeLimit()` কল করে প্রযোজ্য `taxFreeLimit` পান।
    4.  `taxableIncome > taxFreeLimit` কিনা পরীক্ষা করুন।
        *   যদি **হ্যাঁ** হয়:
            *   প্রযোজ্য `minimumTax` পরিমাণ নির্ধারণ করুন (যেমন `MINIMUM_TAX_OTHER_AREA` - **প্লেসহোল্ডার যুক্তি, ব্যবহারকারীর এলাকার জন্য ইনপুট প্রয়োজন**)।
            *   চূড়ান্ত `netTaxPayable = netTax.coerceAtLeast(minimumTax)` গণনা করুন (গণনা করা কর বা ন্যূনতম করের মধ্যে যেটি বেশি)।
        *   যদি **না** হয়:
            *   `netTaxPayable = 0.0` (করমুক্ত সীমার মধ্যে আয় হলে কোনো কর নেই)।
*   **বাস্তবায়ন নোট:** ন্যূনতম কর যুক্তি বর্তমানে অসম্পূর্ণ কারণ ব্যবহারকারীর অবস্থান (ঢাকা/চট্টগ্রাম সিটি কর্পোরেশন, অন্যান্য সিটি কর্পোরেশন, অন্যান্য এলাকা) অনুযায়ী সঠিক ন্যূনতম কর ধ্রুবক নির্বাচন করার জন্য ইনপুট প্রয়োজন।

#### ৩.৮. মুদ্রা ফরম্যাটিং (`formatCurrency` ফাংশন)

*   **অ্যালগরিদম:**
    1.  কারেন্সি ফরম্যাটিংয়ের জন্য উপযুক্ত একটি `NumberFormat` ইনস্ট্যান্স পান, বিশেষ করে বাংলাদেশের জন্য বাংলা লোকেল (`Locale("bn", "BD")`) ব্যবহার করার চেষ্টা করুন।
    2.  `Currency.getInstance("BDT")` ব্যবহার করে মুদ্রা স্পষ্টভাবে BDT সেট করুন।
    3.  সর্বোচ্চ এবং সর্বনিম্ন fraction digits ২ সেট করুন।
    4.  `format.format(value)` ব্যবহার করে ইনপুট `Double` মানটি ফরম্যাট করুন।
    5.  সম্ভাব্য `Exception` (যেমন, লোকেল/কারেন্সি সাপোর্ট না থাকা) হ্যান্ডেল করার জন্য একটি `try-catch` ব্লক ব্যবহার করুন।
    6.  `catch` ব্লকে, একটি মৌলিক ফলব্যাক ফরম্যাট ব্যবহার করুন (`String.format(Locale.US, "BDT %.2f", value)`)।
*   **বাস্তবায়ন নোট:** সম্ভাব্য সঠিক BDT প্রতীক স্থান এবং গ্রুপিং বিভাজক পাওয়ার জন্য `Locale("bn", "BD")` ব্যবহার করা বাঞ্ছনীয়।

---

### ৪. পিডিএফ রিপোর্ট তৈরির অ্যালগরিদম (`generatePdfReport` ফাংশন)

1.  **ডেটা পুনরুদ্ধার:** ক্লাসের মেম্বার ভেরিয়েবল থেকে সর্বশেষ গণনা করা ফলাফল (`taxableIncome`, `taxBeforeRebate` ইত্যাদি) এবং নির্বাচিত ক্যাটাগরির নাম পান। ফলাফল বিদ্যমান কিনা তা পরীক্ষা করুন।
2.  **পিডিএফ ইনিশিয়ালাইজ:** `PdfDocument` এবং `PdfDocument.PageInfo` তৈরি করুন (A4 সাইজ ধরে নেওয়া হয়েছে)। পৃষ্ঠা ১ শুরু করুন এবং `Canvas` পান।
3.  **পেইন্ট সেটআপ:** বিভিন্ন টেক্সট এলিমেন্টের (শিরোনাম, উপশিরোনাম, লেবেল, মান, বোল্ড মান, ফুটার, লাইন) অ্যাপিয়ারেন্স (টেক্সট সাইজ, রঙ, অ্যালাইনমেন্ট, বোল্ড) নিয়ন্ত্রণ করার জন্য বিভিন্ন `Paint` অবজেক্ট তৈরি করুন।
4.  **লেআউট কোঅর্ডিনেট নির্ধারণ:** পৃষ্ঠার প্রস্থ (`pageW`), প্রারম্ভিক Y অবস্থান (`yPos`), বাম/ডান মার্জিন এবং ডান-সারিবদ্ধ মানের জন্য X অবস্থান (`valueStartPos`) এর জন্য ভেরিয়েবল সেট আপ করুন। স্ট্যান্ডার্ড লাইন স্পেসিং নির্ধারণ করুন।
5.  **শিরোনাম এবং হেডার অঙ্কন:** `canvas.drawText` ব্যবহার করে `paintTitle` এবং `paintSubTitle` সহ রিপোর্টের শিরোনাম, মূল্যায়ন বছর এবং করদাতার ক্যাটাগরি আঁকুন, টেক্সট অনুভূমিকভাবে কেন্দ্রে রেখে (`pageW / 2f`) এবং `yPos` বৃদ্ধি করে।
6.  **ফলাফলের সারি অঙ্কন:** প্রতিটি ফলাফল আইটেমের জন্য (Gross Taxable Income, Tax Before Rebate, Investment Rebate, Net Tax Payable):
    *   `leftMargin`-এ `paintLabel` ব্যবহার করে লেবেল টেক্সট আঁকুন (যেমন `getString(R.string.gross_taxable_income)`)।
    *   `valueStartPos` থেকে শুরু করে (ডান-সারিবদ্ধ) `paintValue` বা `paintValueBold` ব্যবহার করে ফরম্যাট করা মুদ্রা মান আঁকুন (যেমন `formatCurrency(taxableIncome)`)।
    *   `yPos`-কে `lineSpacing` দ্বারা বৃদ্ধি করুন।
7.  **বিভাজক অঙ্কন:** রেয়াত এবং নীট প্রদেয় সারির মধ্যে `canvas.drawLine` এবং `paintLine` ব্যবহার করে একটি রেখা আঁকুন।
8.  **অস্বীকৃতি ও ফুটার অঙ্কন:** উপযুক্ত `Paint` অবজেক্ট ব্যবহার করে `canvas.drawText` দিয়ে পৃষ্ঠার নিচের দিকে অস্বীকৃতি টেক্সট এবং জেনারেশন টাইমস্ট্যাম্প/অ্যাপের নাম ফুটার হিসেবে আঁকুন।
9.  **পৃষ্ঠা শেষ ও বন্ধ:** `pdfDocument.finishPage(page)` কল করুন এবং একটি `finally` ব্লকে `pdfDocument.close()` কল করা নিশ্চিত করুন।
10. **ফাইল সংরক্ষণ এবং URI পান:**
    *   টাইমস্ট্যাম্প ব্যবহার করে একটি ইউনিক ফাইলের নাম তৈরি করুন।
    *   `MediaStore` (API 29+) অথবা `FileProvider` + External Cache (API 29 এর নিচে) ব্যবহার করে `pdfDocument` একটি ফাইলে সংরক্ষণ করুন এবং একটি কন্টেন্ট `Uri` পান।
11. **শেয়ার শুরু করুন (`sharePdf`):** যদি একটি বৈধ `Uri` পাওয়া যায়, `sharePdf(uri)` ফাংশন কল করুন।
12. **এরর হ্যান্ডলিং:** ফাইল সংরক্ষণে `IOException` এবং অন্যান্য সাধারণ `Exception` হ্যান্ডেল করার জন্য `try-catch` ব্যবহার করুন, ব্যর্থতার ক্ষেত্রে `Toast` মেসেজ দেখান।

---

### ৫. গুরুত্বপূর্ণ বিবেচ্য বিষয়

*   **নিয়মের নির্ভুলতা:** মূল সীমাবদ্ধতা হলো হার্ডকোডেড, উদাহরণ ট্যাক্স নিয়মের উপর নির্ভরতা। অ্যাপটির উপযোগিতার জন্য **সর্বশেষ অফিসিয়াল এনবিআর সার্কুলার অনুযায়ী নিয়মিত আপডেট অপরিহার্য**।
*   **অব্যাহতি জটিলতা:** বাস্তব জগতের অব্যাহতি গণনা জটিল এবং বর্তমানে বাস্তবায়িত পদ্ধতির চেয়ে আরও বিস্তারিত ব্যবহারকারীর ইনপুট প্রয়োজন।
*   **ন্যূনতম কর অবস্থান:** ন্যূনতম কর গণনার জন্য ব্যবহারকারীর প্রযোজ্য এলাকা নির্ধারণ করার একটি উপায় অ্যাপে প্রয়োজন।
*   **ফ্লোটিং পয়েন্ট নির্ভুলতা:** যদিও স্ট্যান্ডার্ড `Double` ব্যবহৃত হয়েছে, খুব বড় সংখ্যা বা চরম নির্ভুলতা প্রয়োজন এমন আর্থিক গণনার জন্য, ভবিষ্যতে `BigDecimal` ব্যবহার বিবেচনা করা যেতে পারে, যদিও এটি জটিলতা বাড়ায়।
*   **এরর হ্যান্ডলিং:** ইনপুট ভ্যালিডেশন এবং এরর হ্যান্ডলিং আরও শক্তিশালী এবং ব্যবহারকারী-বান্ধব করা যেতে পারে।
